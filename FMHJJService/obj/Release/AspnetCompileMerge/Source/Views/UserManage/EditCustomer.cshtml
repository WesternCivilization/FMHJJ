
@{
    ViewBag.Title = "编辑客户";
}

@model FMHJJService.Model.FMHJJ.Base_UserInfo
@section Styles
{
    <link href="~/Content/edit.css" rel="stylesheet" />  
}

@*设置div宽度及居中显示*@
<div class="col-xs-10 col-xs-offset-1 col-md-7 col-md-offset-2">
    @using (Ajax.BeginForm("EditCustomer", null, new AjaxOptions()
    {
        HttpMethod = "Post",
        OnBegin = "dig.Loading",
        OnSuccess = "dig.Success",
        OnFailure = "dig.Failure",
        OnComplete = "dig.Complete"
    }, new { @class = "form-signin form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.UserType)
        @Html.HiddenFor(model => model.State)
        <div class="form-horizontal h_t">
            <table class="table-width table-condensed">
                <tr>
                    <td class="t_r"><label class="control-label">姓名：</label></td>
                    <td>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @maxlength = 15, @required = "required", @class = "iptext required", @onKeypress = "javascript:if(event.keyCode == 32)event.returnValue = false;" } })
                        <font color="red" class="asterisk-middle">*</font>
                    </td>
                    <td class="t_r"><label class="control-label">密码：</label></td>
                    <td>
                        @Html.PasswordFor(model => model.Password, new { @maxlength = 12, @class = "iptext", @placeholder="重置密码", @onKeypress = "javascript:if(event.keyCode == 32)event.returnValue = false;" })                        
                    </td>
                </tr>
                <tr>
                    <td class="t_r"><label class="control-label">性别：</label></td>
                    <td>
                        <select id="cbSex" name="Sex" class="iptext required" required="required">
                            <option value="0">请选择</option>
                            <option value="1" @(Model.Sex.ToString().Equals("1") ? Html.Raw("selected='selected'").ToString() : string.Empty)>男</option>
                            <option value="2" @(Model.Sex.ToString().Equals("2") ? Html.Raw("selected='selected'").ToString() : string.Empty)>女</option>
                        </select>
                        <font color="red" class="asterisk-middle">*</font>
                    </td>
                    <td class="t_r"><label class="control-label">产品类型：</label></td>
                    <td>
                        @Html.DropDownListFor(model => model.ProductType, ViewBag.database_producttypes as IEnumerable<SelectListItem>, new { @class = "iptext", @style = "float:left;" })
                    </td>
                </tr>
                <tr>
                    <td class="t_r"><label class="control-label">客户等级：</label></td>
                    <td>
                        @Html.DropDownListFor(model => model.UserLvl, ViewBag.database_userlvls as IEnumerable<SelectListItem>, new { @class = "iptext", @style = "float:left;" })                      
                    </td>
                </tr>
                <tr>
                    <td class="t_r"><label class="control-label">公司名称：</label></td>
                    <td colspan="3">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @maxlength = 100, @required = "required", @class = "iptext required" } })
                    <font color="red" class="asterisk-middle">*</font>
                </td>
            </tr>
            <tr>
                <td class="t_r"><label class="control-label">公司地址：</label></td>
                <td colspan="3">
                    @Html.EditorFor(model => model.CompanyAddress, new { htmlAttributes = new { @maxlength = 200, @required = "required", @class = "iptext required" } })
                <font color="red" class="asterisk-middle">*</font>
            </td>
        </tr>
        <tr>
            <td class="t_r"><label class="control-label">电话号码：</label></td>
            <td>
                @Html.EditorFor(model => model.CompanyPhone, new { htmlAttributes = new { @maxlength = 15, @class = "iptext" } })
            </td>
            <td class="t_r"><label class="control-label">手机号码：</label></td>
            <td>@Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @maxlength = 15, @class = "iptext" } })</td>
        </tr>
        <tr>
            <td class="t_r"><label class="control-label">传真号码：</label></td>
            <td>@Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @maxlength = 15, @class = "iptext" } })</td>
            <td class="t_r"><label class="control-label">邮箱地址：</label></td>
            <td>
                @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @maxlength = 50, @class = "iptext" } })
        </td>
    </tr>
</table>

<div class="form-group f_t">
    <div class="col-md-12" style="text-align:center;">
        <input type="submit" value="录入" class="btn btn-info btn-save" />
    </div>
</div>
</div>
    }
</div>

<script type="text/javascript">
    var dig = {
        Loading: function () {
            //$.bootstrapLoading.start({ loadingTips: "正在录入数据，请稍候..." });
        },
        Success: function (result) {
            if (result.Status == "y") {
                top.layer.msg(result.Msg, { time: 500 }, function () {
                    var index = parent.layer.getFrameIndex(window.name); //获取窗口索引
                    parent.layer.close(index);
                });
            } else {
                top.layer.msg(result.Msg, { time: 500 }, function () {
                    dig.Complete();
                });
            }
        },
        Failure: function (result) {
            top.layer.msg(result.Msg);
            dig.Complete();
        },
        Complete: function () {

        },
        ErrorMsg: function (msg) {
            top.layer.msg(msg);
        }
    };

    $(function () {

    })

</script>

